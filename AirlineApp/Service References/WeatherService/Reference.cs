//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AirlineApp.WeatherService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WeatherService.IWeatherData")]
    public interface IWeatherData {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherData/GetWeatherData", ReplyAction="http://tempuri.org/IWeatherData/GetWeatherDataResponse")]
        string GetWeatherData(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherData/GetWeatherData", ReplyAction="http://tempuri.org/IWeatherData/GetWeatherDataResponse")]
        System.Threading.Tasks.Task<string> GetWeatherDataAsync(string value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWeatherDataChannel : AirlineApp.WeatherService.IWeatherData, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WeatherDataClient : System.ServiceModel.ClientBase<AirlineApp.WeatherService.IWeatherData>, AirlineApp.WeatherService.IWeatherData {
        
        public WeatherDataClient() {
        }
        
        public WeatherDataClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WeatherDataClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherDataClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherDataClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetWeatherData(string value) {
            return base.Channel.GetWeatherData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetWeatherDataAsync(string value) {
            return base.Channel.GetWeatherDataAsync(value);
        }
    }
}
